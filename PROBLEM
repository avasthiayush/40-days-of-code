/*
soul_iconic
Ayush Avasthi
/*

#include <bits/stdc++.h>
using namespace std;
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define M 1000000007
typedef long long ll;
ll id[1000009],size[1000009],cost[100009],ans=0;
ll parent(ll v)
{
    if (v == id[v])
        return v;
    return id[v] = parent(id[v]);
}

void uni(ll a,ll b)
{
    ll p=parent(a);
    ll q=parent(b);
    if(p!=q)
    {
    if(size[p]<size[q])
    swap(p,q);
    id[q]=p;
    size[p]+=size[q];
    ans=max(ans,size[p]);
    }
    
}
void init(ll n)
{
    for(ll i=1;i<=n;i++)
    {
        id[i]=i;
        size[i]=1;
    }
}
int main() { 
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ll t;
    cin>>t;
    while(t--)
    {
       ll n,m,q,i;
       ans=1;
       cin>>n>>m>>q;
       ll a[q+1],b[q+1],c[q+1],d[q+1],e[q+1],arr[n+1][m+1],brr[n+1][m+1];
       ll p,r,sum=0,j;
       init(n*m);
       memset(arr,0,sizeof(arr));
       memset(brr,0,sizeof(brr));
       for(i=1;i<=q;i++)
       {
          cin>>a[i];
          if(a[i]==1)
          {
              cin>>b[i]>>c[i];
              arr[b[i]][c[i]]++;
          }
          else if(a[i]==2)
          {
              
              cin>>d[i]>>e[i];
              brr[d[i]][e[i]]++;
          }
          else if(a[i]==3)
          {
              cin>>b[i]>>c[i]>>d[i]>>e[i];
          }
           
       }
       for(i=1;i<=n;i++)
        {
            for(j=1;j<=m;j++)
           {
            if(arr[i][j]==0 && j<m)
            {
               p=(i-1)*m+j;
               uni(p,p+1);
            }
            if(brr[i][j]==0 && i<n)
            {
                p=(i-1)*m+j;
                uni(p,p+m);
            }
           }
        }
         
      
      for(i=q;i>=1;i--)
      {
          if(a[i]==1)
          {
              if(arr[b[i]][c[i]]-1==0)
              {
                  p=(b[i]-1)*m+c[i];
                  uni(p,p+1);
                  
              }
              arr[b[i]][c[i]]-=1;
              
          }
          else if(a[i]==2)
          {
              if(brr[d[i]][e[i]]-1==0)
              {
                  p=(d[i]-1)*m+e[i];
                   uni(p,p+m);
                  
              }
               brr[d[i]][e[i]]-=1;
          }
          else if(a[i]==3)
          {
              p=(b[i]-1)*m+c[i];
              r=(d[i]-1)*m+e[i];
              if(parent(p)==parent(r))
              sum++;
          }
          else
          sum+=ans;
        
      }
    //   for(i=1;i<=n*m;i++)
    //   cout<< size[i]<<" ";
     cout<<sum<<endl;
       
    }
    return 0;
}
